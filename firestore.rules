
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is an admin
    function isAdmin() {
      // Replace YOUR_ADMIN_UID_HERE with the actual UID of your admin user
      // You can find this UID in the Firebase Authentication console
      // Ensure this UID is for an account you control and has appropriate privileges.
      let adminUID = "YOUR_ADMIN_UID_HERE"; // IMPORTANT: Replace this placeholder
      return request.auth != null && request.auth.uid == adminUID;
    }

    // Users collection:
    // - Authenticated users can create their own user document (on sign-up).
    // - Authenticated users can read their own user document.
    // - Admins can read and write any user document (e.g., to assign roles or groups).
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if isAdmin() || (request.auth != null && request.auth.uid == userId); // Allow users to update their own doc, admins to update any.
      allow delete: if isAdmin();
    }

    // Departments collection and its subcollections (years, specialities, groups):
    // - Admins have full access (create, read, update, delete).
    // - Authenticated users can read (e.g., for populating dropdowns, viewing schedules).
    match /departments/{departmentId}/{document=**} {
      allow read: if request.auth != null || isAdmin(); // Allow any authenticated user or admin to read
      allow write: if isAdmin(); // Only admins can write (create, update, delete)
    }
    
    // Rule for 'schedule' subcollection documents accessed via collectionGroup queries
    // - Teachers can read slots assigned to them.
    // - Students can read slots belonging to their assigned group.
    // - Admins can read any schedule slot.
    match /{path=**}/schedule/{slotId} {
      allow read: if isAdmin() || (request.auth != null && (
          request.auth.uid == resource.data.teacherId ||
          (
            exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
            get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Student' &&
            resource.data.groupId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.assignedGroupId
          )
        )
      );
      // Write access to schedule slots should be managed by admins (implicitly covered by the /departments/{departmentId}/{document=**} rule for admins).
      // No separate write rule here unless non-admins need to write to schedules.
    }
  }
}
