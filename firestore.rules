
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      // IMPORTANT: Ensure 'YOUR_ADMIN_UID_HERE' is replaced with your actual Admin User ID
      return request.auth.uid == 'YOUR_ADMIN_UID_HERE';
    }

    // Explicit rule for admin to read any 'schedule' document via collectionGroup queries.
    // This is primarily for admin functionalities like the teacher assignment status check.
    match /{path=**}/schedule/{scheduleDocId} {
      allow read: if isAdmin();
      // Write access and more specific reads for other roles (teachers, students)
      // are handled by the more specific, nested rule for '/departments/.../schedule/{scheduleId}'.
      // No write rule is defined here to keep it read-only for the collection group at this general level
      // unless explicitly granted elsewhere for specific paths or roles.
    }

    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId || isAdmin();
      allow delete: if isAdmin();
    }

    match /departments/{departmentId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();

      match /years/{yearId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();

        match /specialities/{specialityId} {
          allow read: if request.auth != null;
          allow write: if isAdmin();

          match /groups/{groupId} {
            allow read: if request.auth != null;
            allow write: if isAdmin();

            match /schedule/{scheduleId} {
              // Specific rules for schedule documents at their full path.
              // Admin read is covered by the collectionGroup rule above for broader queries.
              // Teacher and Student specific reads:
              allow read: if request.auth.uid == resource.data.teacherId ||
                           (exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                           get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Student' &&
                           get(/databases/$(database)/documents/users/$(request.auth.uid)).data.assignedGroupId == resource.data.groupId) ||
                           isAdmin(); // Also allow admin read via specific path if needed elsewhere.
              allow write: if isAdmin(); // Only admin can write to schedules directly via this path.
            }
          }
        }
      }
    }

    match /attendances/{attendanceId} {
      allow create, update: if request.auth.uid == request.resource.data.teacherId || isAdmin();
      allow read: if request.auth.uid == resource.data.teacherId ||
                       request.auth.uid == resource.data.studentId ||
                       isAdmin();
      allow delete: if isAdmin();
    }
  }
}
