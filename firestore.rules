rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users Collection
    // - Allow users to create their own document upon sign-up.
    // - Allow authenticated users to read their own document.
    // - Allow authenticated users to update their own document (e.g. profile changes).
    // - Allow admins to read/write any user document.
    match /users/{userId} {
      allow create: if request.auth.uid == userId;
      allow read, update: if request.auth.uid == userId;
      allow read, write: if request.auth.uid == 'YOUR_ADMIN_UID_HERE'; // Replace with actual Admin UID
    }

    // Departments Collection & Subcollections (Years, Specialities, Groups, Schedule)
    // - Allow admins to read/write anything within departments and all their nested subcollections.
    match /departments/{departmentId}/{documents=**} {
      allow read, write: if request.auth.uid == 'YOUR_ADMIN_UID_HERE'; // Replace with actual Admin UID
    }
    
    // Rule for the 'schedule' subcollection (can be nested under any group)
    // This allows teachers to read schedule slots assigned to them for their dashboard.
    match /{path=**}/schedule/{slotId} {
      // Allow authenticated users to read schedule slots if their UID matches the teacherId in the slot
      allow read: if request.auth.uid != null && request.auth.uid == resource.data.teacherId;
      // Allow admins to read/write all schedule slots (covered by the /departments/{departmentId}/{documents=**} rule if schedule is always nested there,
      // but this specific rule is good for collectionGroup queries if schedule could exist elsewhere or for clarity)
      allow read, write: if request.auth.uid == 'YOUR_ADMIN_UID_HERE'; // Replace with actual Admin UID
    }

    // Fallback: Deny all other reads/writes by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}